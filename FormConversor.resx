<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCalcular.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAdhxAAHYcQFzn84mAAADJElE
        QVRYR9XXt4sWQRjH8TXc+4pgwARa2Ckoin/AndqIIPiG5k7R3kZBEC0VMVUn2FhcsBFUBFEQs2gjhk4x
        9EZMoNiY0/c3M7vOzc2+7+7rNTfwwXt3nnlm3Z20ybgq9cEuTEalgnlY6My111TX5aLHqJA4aQyp48ps
        NHAYF/EYz5xH7prq6pgF0/a/ikuiZNtwD1/xpw3F3IXamBspXdQIE7AK1/EDsc5aURu17akNVos/DQU2
        bOeb8Aqx5GW8QG99wOR0veQUBdTs/34z3iGWsBNv0MdNtH4SqsRqvEQsURk/g9/PoVfqeguKKqBBcw1+
        w058wl7c8q7JVYwemO6xi0ZueOdl/cJ+TMIiXEBap9xbQF9V1zvFXqjMgaaPn6wT55CtA5iPs0jr70B9
        ud4p+oEmiszzVu5jKfy8U3ESaYz60GJlYpLagJ2j0CrmJyvrNdYgzafcmno78R1+7EEk9WFuwvxh13Yt
        pX5QGV+wdcMe8rmp5qzDW4Tx6kt9ZjegzUTreRgov3Eal7xroaOYAvNU9S8W4wFi8epLfWbB2tG0qcSC
        b0IDSU4gnCWXoTq/82k4BT/Op77UZ9sb0LVupHEzcQTfoPonWA6/84nYjVb7x6gbyHsFO2BivA40qnfh
        KTRzksbI974e7xHm8j3EiFeQNwhvYAVMnHcTVXfdDqR/15dAycM8IS1Otm3DnHJM47xpqCezFiYuVlzd
        DJxBLEdIK6V5cn4CLQ55C5E2p4000PJqG7mi32zfur4PRZZxTVm9JpeBoh/QkUvLZKyRfMR26PHbdkP2
        qUBj4QNi7UK3ob5MDlMa7sSCdpvRZ/RjOtI2y5C3hoSyzUh9jii6iCLbsabXcSyApuV5xOJi4ttxWlSB
        HujwEEvgu4JjKHpezNaU3KLKpp3TvdAxKpbIp2U6dj2kjarZ9kimoiBGu3axPuhAGUtYhv7nzVqRQ2la
        FAg1WAm9t06P5RpP3TX7YeOylyhqBA0ajVydlop+mGiqqU3+gCtalMB+E5q5W8Mh5H2aHYAWmexINqZF
        34jN4ezjVJuJdjTR3xXVKWYclST5C13LwHc+rQQ8AAAAAElFTkSuQmCC
</value>
  </data>
</root>